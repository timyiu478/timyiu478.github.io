

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Tim Yiu</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-02-03T00:14:14+08:00</updated>
  <author>
    <name>Tim Yiu</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Tim Yiu </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>VMS Lazy Optimizations</title>
    <link href="http://localhost:4000/posts/vms-lazy-optimizations/" rel="alternate" type="text/html" title="VMS Lazy Optimizations" />
    <published>2024-02-02T00:00:00+08:00</published>
  
    <updated>2024-02-02T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/vms-lazy-optimizations/</id>
    <content src="http://localhost:4000/posts/vms-lazy-optimizations/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      Demand Page Zeroing


  Consider adding a page to the address space, say in the heap.
  The OS have to zero the page for security reason so that the process cannot know how this page used for.
  Instead of the OS zeros the page before maps it into your address space, the OS  the OS just adds an entry to the page table marking it unavailable.
  When the process reads or writes the page, it traps...
    </summary>
  

  </entry>

  
  <entry>
    <title>Page Swapping</title>
    <link href="http://localhost:4000/posts/page-swapping/" rel="alternate" type="text/html" title="Page Swapping" />
    <published>2024-01-30T00:00:00+08:00</published>
  
    <updated>2024-02-01T21:09:37+08:00</updated>
  
    <id>http://localhost:4000/posts/page-swapping/</id>
    <content src="http://localhost:4000/posts/page-swapping/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      What is page swapping

Swap pages to disk so that the running programs to use more RAM than is physically accessible.

Swap Space


  Swap space is reserved space on the disk for moving pages between memory and the file system.
  This assumes the OS can read and write to swap space in page-sized units.


The free Command

The free command displays amount of free and used memory in the system.

...
    </summary>
  

  </entry>

  
  <entry>
    <title>Memory Space Management with paging</title>
    <link href="http://localhost:4000/posts/memory-space-management-with-paging/" rel="alternate" type="text/html" title="Memory Space Management with paging" />
    <published>2024-01-28T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:32:10+08:00</updated>
  
    <id>http://localhost:4000/posts/memory-space-management-with-paging/</id>
    <content src="http://localhost:4000/posts/memory-space-management-with-paging/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      What is Paging

Paging is another memory space management approach that dividing memory into fixed size of chuncks called pages. In contrast to segmentation, paging does not have external fragmentation and support the abstraction of an address space effectively, regardless of how a process uses the address space since it won’t make assumptions about the way the heap and stack grow and how they ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Advanced Page Table</title>
    <link href="http://localhost:4000/posts/advanced-page-table/" rel="alternate" type="text/html" title="Advanced Page Table" />
    <published>2024-01-28T00:00:00+08:00</published>
  
    <updated>2024-02-01T00:51:36+08:00</updated>
  
    <id>http://localhost:4000/posts/advanced-page-table/</id>
    <content src="http://localhost:4000/posts/advanced-page-table/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      Problem of Linear Page Table


  The size of the page table is too big.
  We need to allocate the physical memory for the page table entries that there is no physical frame as well.


Larger Page size


  One way to make the page table smaller is make the page size larger because it makes the number of page table entries to be decreased.
  The major drawback to this strategy is that large pages...
    </summary>
  

  </entry>

  
  <entry>
    <title>Transaction Lookaside Buffer</title>
    <link href="http://localhost:4000/posts/Transaction-Loodaside-Buffer/" rel="alternate" type="text/html" title="Transaction Lookaside Buffer" />
    <published>2024-01-28T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:40:47+08:00</updated>
  
    <id>http://localhost:4000/posts/Transaction-Loodaside-Buffer/</id>
    <content src="http://localhost:4000/posts/Transaction-Loodaside-Buffer/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      Problem of Paging

Paging needs an additional memory lookup in order to translate each virtual address, but it takes too long to obtain translation information before every instruction fetch, load, or store.

What is Transaction Lookaside Buffer?

In order to speed up the process of address translation, we use the hardware cache for the address translation. This cache is called Transaction Look...
    </summary>
  

  </entry>

</feed>


