

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Tim Yiu</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-07-18T17:44:43+08:00</updated>
  <author>
    <name>Tim Yiu</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> Â© 2024 Tim Yiu </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Travel to japan kansai from May 2024 to June 2024</title>
    <link href="http://localhost:4000/posts/travel-to-japan-kansai-from-may-to-june/" rel="alternate" type="text/html" title="Travel to japan kansai from May 2024 to June 2024" />
    <published>2024-07-17T00:00:00+08:00</published>
  
    <updated>2024-07-18T17:38:59+08:00</updated>
  
    <id>http://localhost:4000/posts/travel-to-japan-kansai-from-may-to-june/</id>
    <content src="http://localhost:4000/posts/travel-to-japan-kansai-from-may-to-june/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="travel" />
    
    <category term="japan" />
    
  

  
    <summary>
      





      Kyoto






















Nara








Himeji








Kobe















Mieken







Nachi




    </summary>
  

  </entry>

  
  <entry>
    <title>Fast File System</title>
    <link href="http://localhost:4000/posts/fast-file-system/" rel="alternate" type="text/html" title="Fast File System" />
    <published>2024-02-25T00:00:00+08:00</published>
  
    <updated>2024-02-25T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/fast-file-system/</id>
    <content src="http://localhost:4000/posts/fast-file-system/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="os" />
    
    <category term="persistence" />
    
  

  
    <summary>
      





      Old Unix File System

Structure


  Super Block: information about the entire file system e.g. how big the volume is, how many inodes there are, a pointer to the head of a free list of blocks.
  Inode Region
  Data Region


Poor Performance


  The main issue was that the old UNIX file system treated the disk like it was a random-access memory. The data was spread all over the place without reg...
    </summary>
  

  </entry>

  
  <entry>
    <title>Very Simple File System Implementation</title>
    <link href="http://localhost:4000/posts/file-system-implementation/" rel="alternate" type="text/html" title="Very Simple File System Implementation" />
    <published>2024-02-24T00:00:00+08:00</published>
  
    <updated>2024-02-24T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/file-system-implementation/</id>
    <content src="http://localhost:4000/posts/file-system-implementation/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="os" />
    
    <category term="persistence" />
    
  

  
    <summary>
      





      A mental model of a File System


  Data Structure: what types of on-disk structures are utilized by the file system to organize its data and metadata?
  Access methods: How does it map the calls made by a process, such as open(), read(), write(), etc., onto its structures?


Overall Organization


  Block: divide disk to a series of blocks.
  Data Region: reserve a fixed portion of the disk fo...
    </summary>
  

  </entry>

  
  <entry>
    <title>File and Directory</title>
    <link href="http://localhost:4000/posts/file-and-directory/" rel="alternate" type="text/html" title="File and Directory" />
    <published>2024-02-17T00:00:00+08:00</published>
  
    <updated>2024-02-17T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/file-and-directory/</id>
    <content src="http://localhost:4000/posts/file-and-directory/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="os" />
    
    <category term="persistence" />
    
  

  
    <summary>
      





      Storage Abstractions

Storage virtualization is based on two main ideas: the file and the directory.


  File: A group of bytes that can be read or written. Each file has a low-level name in the form of an inode number.
  Directory: the user-readable name and the low-level name are listed in pairs.


A file system consists of groups of directories and the files and other directories they contai...
    </summary>
  

  </entry>

  
  <entry>
    <title>Redundant Array Independent Disk (RAID)</title>
    <link href="http://localhost:4000/posts/raid/" rel="alternate" type="text/html" title="Redundant Array Independent Disk (RAID)" />
    <published>2024-02-13T00:00:00+08:00</published>
  
    <updated>2024-02-24T14:53:45+08:00</updated>
  
    <id>http://localhost:4000/posts/raid/</id>
    <content src="http://localhost:4000/posts/raid/" />
    <author>
      <name>Tim Yiu</name>
    </author>

  
    
    <category term="os" />
    
    <category term="persistence" />
    
  

  
    <summary>
      





      What is RAID?


  A hardware RAID is a computer system designed to manage a set of disks.
  RAID technology has three basic functions:
    
      Block access to data is achieved by striping the data on the disk, reducing the mechanical seek time and increasing data access speed.
      Reading multiple disks in an array reduces mechanical seek time and increases data access speed at the same ti...
    </summary>
  

  </entry>

</feed>


